{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCEA,IAAM,EAAQ,SAAS,aAAa,CAAC,SAErC,EAAM,gBAAgB,CAAC,QAAS,SAAU,CAAC,EACzC,IAAM,EAAa,EAAE,MAAM,CAAC,OAAO,CAAC,YAEpC,GAAI,EAAY,CACd,I,EAAQ,EAA2B,EAA3B,SAAA,CAAW,EAAgB,EAAhB,WAAnB,CACM,E,A,S,C,E,G,M,O,C,G,O,E,E,E,EAAgB,EAAM,aAAa,CAAC,SAAS,IAAI,G,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,IAEvD,EAAU,IAAI,CAAC,SAAC,CAAA,CAAM,CAAtB,EACE,IAAM,EAAQ,EAAK,KAAK,CAAC,EAAU,CAAC,WAAW,CACzC,EAAQ,EAAK,KAAK,CAAC,EAAU,CAAC,WAAW,CACzC,EAAS,gBAEf,AAAI,CAAC,OAAQ,WAAW,CAAC,QAAQ,CAAC,GACzB,EAAM,aAAa,CAAC,GAClB,CAAC,MAAO,SAAS,CAAC,QAAQ,CAAC,GAC7B,CAAC,EAAM,OAAO,CAAC,EAAQ,IAAM,CAAC,EAAM,OAAO,CAAC,EAAQ,UAE/D,GAEA,IAAM,EAAY,EAAM,aAAa,CAAC,QAEtC,CAAA,EAAU,SAAS,CAAG,GACtB,EAAU,OAAO,CAAC,SAAC,CAAnB,EAA2B,OAAA,EAAU,WAAW,CAAC,E,EACnD,CACF","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\nvar table = document.querySelector(\"table\");\ntable.addEventListener(\"click\", function(e) {\n    var headerCell = e.target.closest(\"thead th\");\n    if (headerCell) {\n        var cellIndex = headerCell.cellIndex, textContent = headerCell.textContent;\n        var tbodyRows = _to_consumable_array(table.querySelector(\"tbody\").rows);\n        tbodyRows.sort(function(rowA, rowB) {\n            var cellA = rowA.cells[cellIndex].textContent;\n            var cellB = rowB.cells[cellIndex].textContent;\n            var regExp = /[^0-9]/g;\n            if ([\n                \"Name\",\n                \"Position\"\n            ].includes(textContent)) return cellA.localeCompare(cellB);\n            else if ([\n                \"Age\",\n                \"Salary\"\n            ].includes(textContent)) return +cellA.replace(regExp, \"\") - +cellB.replace(regExp, \"\");\n        });\n        var tableBody = table.querySelector(\"tbody\");\n        tableBody.innerHTML = \"\";\n        tbodyRows.forEach(function(row) {\n            return tableBody.appendChild(row);\n        });\n    }\n});\n\n//# sourceMappingURL=index.5ac64432.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\n\ntable.addEventListener('click', function (e) {\n  const headerCell = e.target.closest('thead th');\n\n  if (headerCell) {\n    const { cellIndex, textContent } = headerCell;\n    const tbodyRows = [...table.querySelector('tbody').rows];\n\n    tbodyRows.sort((rowA, rowB) => {\n      const cellA = rowA.cells[cellIndex].textContent;\n      const cellB = rowB.cells[cellIndex].textContent;\n      const regExp = /[^0-9]/g;\n\n      if (['Name', 'Position'].includes(textContent)) {\n        return cellA.localeCompare(cellB);\n      } else if (['Age', 'Salary'].includes(textContent)) {\n        return +cellA.replace(regExp, '') - +cellB.replace(regExp, '');\n      }\n    });\n\n    const tableBody = table.querySelector('tbody');\n\n    tableBody.innerHTML = '';\n    tbodyRows.forEach((row) => tableBody.appendChild(row));\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","table","document","querySelector","addEventListener","e","headerCell","target","closest","cellIndex","textContent","tbodyRows","_array_without_holes","isArray","rows","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","sort","rowA","rowB","cellA","cells","cellB","regExp","includes","localeCompare","replace","tableBody","innerHTML","forEach","row","appendChild"],"version":3,"file":"index.5ac64432.js.map"}